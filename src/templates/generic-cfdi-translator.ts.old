import { type CNodeInterface, type CNodes } from '@nodecfdi/cfdiutils-common';
import {
  type Column,
  type Content,
  type ContentColumns,
  type ContentTable,
  type Style,
  type TableCell,
  type TDocumentDefinitions,
} from 'pdfmake/interfaces';
import { type CatalogsInterface } from '../catalogs/catalogs-interface.js';
import { type CfdiData } from '../cfdi_data.js';
import { breakEveryNCharacters } from '../utils/break_characters.js';
import { formatCurrency, toCurrency, toNumber } from '../utils/currency.js';
import { useImpLocal10Complement } from './complements/imp-local10-complement.js';
import { usePago10Complement } from './complements/pago10-complement.js';
import { usePago20Complement } from './complements/pago20-complement.js';
import { type DocumentTranslatorInterface } from './document-translator-interface.js';

export class GenericCfdiTranslator implements DocumentTranslatorInterface<CfdiData> {
  protected generateContent(cfdiData: CfdiData, catalogs: CatalogsInterface): Content {

    /** Area of complements */
    usePago10Complement(comprobante, content);
    usePago20Complement(comprobante, content);

    content.push(this.generateStampContent(cfdiData));

    return content;
  }
}
